/*
Merchant APIs

universalmacro

API version: 0.0.3
Contact: chenyunda218@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSessionRequest{}

// CreateSessionRequest Login request
type CreateSessionRequest struct {
	ShortMerchantId *string `json:"shortMerchantId,omitempty"`
	Account *string `json:"account,omitempty"`
	Password *string `json:"password,omitempty"`
}

// NewCreateSessionRequest instantiates a new CreateSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSessionRequest() *CreateSessionRequest {
	this := CreateSessionRequest{}
	return &this
}

// NewCreateSessionRequestWithDefaults instantiates a new CreateSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSessionRequestWithDefaults() *CreateSessionRequest {
	this := CreateSessionRequest{}
	return &this
}

// GetShortMerchantId returns the ShortMerchantId field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetShortMerchantId() string {
	if o == nil || IsNil(o.ShortMerchantId) {
		var ret string
		return ret
	}
	return *o.ShortMerchantId
}

// GetShortMerchantIdOk returns a tuple with the ShortMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetShortMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShortMerchantId) {
		return nil, false
	}
	return o.ShortMerchantId, true
}

// HasShortMerchantId returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasShortMerchantId() bool {
	if o != nil && !IsNil(o.ShortMerchantId) {
		return true
	}

	return false
}

// SetShortMerchantId gets a reference to the given string and assigns it to the ShortMerchantId field.
func (o *CreateSessionRequest) SetShortMerchantId(v string) {
	o.ShortMerchantId = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *CreateSessionRequest) SetAccount(v string) {
	o.Account = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateSessionRequest) SetPassword(v string) {
	o.Password = &v
}

func (o CreateSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShortMerchantId) {
		toSerialize["shortMerchantId"] = o.ShortMerchantId
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableCreateSessionRequest struct {
	value *CreateSessionRequest
	isSet bool
}

func (v NullableCreateSessionRequest) Get() *CreateSessionRequest {
	return v.value
}

func (v *NullableCreateSessionRequest) Set(val *CreateSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSessionRequest(val *CreateSessionRequest) *NullableCreateSessionRequest {
	return &NullableCreateSessionRequest{value: val, isSet: true}
}

func (v NullableCreateSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


